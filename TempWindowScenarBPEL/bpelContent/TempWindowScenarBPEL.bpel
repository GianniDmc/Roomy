<!-- TempWindowScenarBPEL BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Jan 07 11:35:38 CET 2018 -->
<bpel:process name="TempWindowScenarBPEL"
         targetNamespace="tempWindowScenarBPEL.insa.fr"
         suppressJoinFailure="yes"
         xmlns:tns="tempWindowScenarBPEL.insa.fr"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://WebServices">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://WebServices" location="TemperatureSensorWS.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="TempWindowScenarBPELArtifacts.wsdl" namespace="tempWindowScenarBPEL.insa.fr" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:TempWindowScenarBPEL"
                     myRole="TempWindowScenarBPELProvider"
                     />
        <bpel:partnerLink name="TemperatureSensorWSPartnerLink" partnerLinkType="tns:TemperatureSensorWSLinkType" partnerRole="TemperatureSensorWSRole"></bpel:partnerLink>
        <bpel:partnerLink name="WindowWSPartnerLink" partnerLinkType="tns:WindowWSLinkType" partnerRole="WindowWSRole"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:TempWindowScenarBPELRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:TempWindowScenarBPELResponseMessage"/>
        <bpel:variable name="TemperatureSensorWSPartnerLinkResponse" messageType="ns:getTemperatureResponse"></bpel:variable>
        <bpel:variable name="TemperatureSensorWSPartnerLinkRequest" messageType="ns:getTemperatureRequest"></bpel:variable>
        
        <bpel:variable name="WindowWSPartnerLinkRequest" messageType="ns:closeWindowRequest"></bpel:variable>
        <bpel:variable name="WindowWSPartnerLinkRequest1" messageType="ns:openWindowRequest"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in TempWindowScenarBPEL.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:TempWindowScenarBPEL"
                 operation="process" variable="input"
                 createInstance="yes"/>
        
        <!-- Generate reply to synchronous request -->
        <bpel:invoke name="InvokeTemperature" partnerLink="TemperatureSensorWSPartnerLink" operation="getTemperature" portType="ns:TemperatureSensorWSPortType" inputVariable="TemperatureSensorWSPartnerLinkRequest" outputVariable="TemperatureSensorWSPartnerLinkResponse"></bpel:invoke>
        
        <bpel:if name="If">
            <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[$TemperatureSensorWSPartnerLinkResponse.parameters >= 17.0]]></bpel:condition>
            <bpel:invoke name="InvokeWindowOpen" partnerLink="WindowWSPartnerLink" operation="openWindow" portType="ns:WindowWSPortType" inputVariable="WindowWSPartnerLinkRequest1"></bpel:invoke>
            <bpel:else>
                <bpel:invoke name="InvokeWindowClose" partnerLink="WindowWSPartnerLink" operation="closeWindow" portType="ns:WindowWSPortType" inputVariable="WindowWSPartnerLinkRequest"></bpel:invoke>
            </bpel:else>
        </bpel:if>
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:TempWindowScenarBPEL"
               operation="process" 
               variable="output"
               />
    </bpel:sequence>
</bpel:process>

